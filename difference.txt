
----------

bold
italic
underline
strikethrough
alignment
    left
    right
    center
    justify
direction
    ltr
    rtl
intent
    left
    right
quote
line height - conversion is done, editor changes required to handle style

custom
    color
    background
    link
    table
    font size
    font weight
    font family

list 
    number - ok, handle with css
    alphabet- ok, handle with css, (className item-alpha)
    dot - ok, 
    tick - ok, add tick with css, (className item-check)
    hyphen - ok, add tick with css, (className item-hyphen)

    list + font-size  - ok
    list + color  - ok
    list + color + background - ok
    list + link - ok
    list + link + bold - ok
    link + bold - ok
    link + italic - ok
    link + underline - ok

whats next
    divider - ok
    form - ok
    image - ok
    gallery - ok
    video - ok
    price module - ok
    html - ok
    goal module-  ok
    testimonial - ok

optimization
    this saves 18% space when tested with 72KB file
    shortner - to shorten the keys before making API call
    expander - to expand the keys before initializing the editor


proposal converter script - combine all the modules created so far and create a single converter script that that will take draft.js proposal as input and will output as lexical version of the proposal.
create a POC editor to compare the results
once things looks good we can assume that draft to lexical conversion is working 99% perfect


